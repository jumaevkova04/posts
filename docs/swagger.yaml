basePath: /api
definitions:
  dto.CheckRegisterOTPRequest:
    properties:
      email:
        example: example@gmail.com
        type: string
      otp:
        example: "123456"
        maxLength: 6
        minLength: 6
        type: string
    required:
    - email
    - otp
    type: object
  dto.CheckRegisterOTPResponse:
    properties:
      nonce:
        type: string
    type: object
  dto.CreateFollowerRequest:
    properties:
      follower_id:
        example: 00000000-0000-0000-0000-000000000000
        type: string
    required:
    - follower_id
    type: object
  dto.CreatePostRequest:
    properties:
      image_url:
        example: https://example.com/image.jpg
        type: string
      text:
        example: This is a post
        maxLength: 300
        minLength: 10
        type: string
    required:
    - image_url
    - text
    type: object
  dto.LoginRequest:
    properties:
      email:
        example: example@gmail.com
        type: string
      password:
        description: '`min: one uppercase letter, one lowercase letter, one digit,
          one special character`'
        example: p@ssW0rd
        maxLength: 64
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  dto.LoginResponse:
    properties:
      token:
        type: string
      token_expiry:
        type: string
    type: object
  dto.OTPToRegisterRequest:
    properties:
      email:
        example: example@gmail.com
        type: string
    required:
    - email
    type: object
  dto.RegisterRequest:
    properties:
      email:
        example: example@gmail.com
        type: string
      name:
        example: John
        maxLength: 100
        minLength: 2
        type: string
      nonce:
        example: exampleNonce
        type: string
      password:
        description: '`min: one uppercase letter, one lowercase letter, one digit,
          one special character`'
        example: p@ssW0rd
        maxLength: 64
        minLength: 8
        type: string
      patronymic:
        example: Adams
        maxLength: 100
        minLength: 2
        type: string
      surname:
        example: Doe
        maxLength: 100
        minLength: 2
        type: string
    required:
    - email
    - name
    - nonce
    - password
    - surname
    type: object
  dto.UpdateUserRequest:
    properties:
      name:
        example: John
        maxLength: 100
        minLength: 2
        type: string
      patronymic:
        example: Adams
        maxLength: 100
        minLength: 2
        type: string
      surname:
        example: Doe
        maxLength: 100
        minLength: 2
        type: string
    required:
    - name
    - surname
    type: object
  models.Post:
    properties:
      created_at:
        type: string
      id:
        type: string
      image_url:
        type: string
      text:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  models.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
      password:
        type: string
      patronymic:
        $ref: '#/definitions/null.String'
      surname:
        type: string
      updated_at:
        type: string
    type: object
  null.String:
    properties:
      string:
        type: string
      valid:
        description: Valid is true if String is not NULL
        type: boolean
    type: object
  response.ErrorResponse:
    properties:
      error: {}
      message:
        type: string
    type: object
info:
  contact: {}
  title: POSTS API
  version: "1.0"
paths:
  /follow:
    post:
      consumes:
      - application/json
      parameters:
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CreateFollowerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - followers
  /followings:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - followers
  /login:
    post:
      consumes:
      - application/json
      parameters:
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      tags:
      - auth
  /posts:
    get:
      consumes:
      - application/json
      parameters:
      - example: 1
        in: query
        name: page
        required: true
        type: integer
      - example: 10
        in: query
        name: per_page
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Post'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - posts
    post:
      consumes:
      - application/json
      parameters:
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CreatePostRequest'
      produces:
      - application/json
      responses:
        "200":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - posts
  /register:
    post:
      consumes:
      - application/json
      parameters:
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      tags:
      - register
  /register/check_otp:
    post:
      consumes:
      - application/json
      parameters:
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CheckRegisterOTPRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.CheckRegisterOTPResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      tags:
      - register
  /register/otp:
    post:
      consumes:
      - application/json
      parameters:
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.OTPToRegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      tags:
      - register
  /users/me:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - users
  /users/update:
    put:
      consumes:
      - application/json
      parameters:
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - users
schemes:
- http
- https
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
